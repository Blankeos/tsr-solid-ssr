/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutIndexImport } from './routes/_layout/index'
import { Route as LayoutDashboardLayoutImport } from './routes/_layout/_dashboardLayout'
import { Route as LayoutDashboardLayoutDashboardIndexImport } from './routes/_layout/_dashboardLayout/dashboard/index'
import { Route as LayoutDashboardLayoutDashboardSettingsImport } from './routes/_layout/_dashboardLayout/dashboard/settings'
import { Route as LayoutDashboardLayoutDashboardProfilesIdImport } from './routes/_layout/_dashboardLayout/dashboard/profiles/$id'

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutDashboardLayoutRoute = LayoutDashboardLayoutImport.update({
  id: '/_dashboardLayout',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutDashboardLayoutDashboardIndexRoute =
  LayoutDashboardLayoutDashboardIndexImport.update({
    id: '/dashboard/',
    path: '/dashboard/',
    getParentRoute: () => LayoutDashboardLayoutRoute,
  } as any)

const LayoutDashboardLayoutDashboardSettingsRoute =
  LayoutDashboardLayoutDashboardSettingsImport.update({
    id: '/dashboard/settings',
    path: '/dashboard/settings',
    getParentRoute: () => LayoutDashboardLayoutRoute,
  } as any)

const LayoutDashboardLayoutDashboardProfilesIdRoute =
  LayoutDashboardLayoutDashboardProfilesIdImport.update({
    id: '/dashboard/profiles/$id',
    path: '/dashboard/profiles/$id',
    getParentRoute: () => LayoutDashboardLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/solid-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layout/_dashboardLayout': {
      id: '/_layout/_dashboardLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutDashboardLayoutImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/_dashboardLayout/dashboard/settings': {
      id: '/_layout/_dashboardLayout/dashboard/settings'
      path: '/dashboard/settings'
      fullPath: '/dashboard/settings'
      preLoaderRoute: typeof LayoutDashboardLayoutDashboardSettingsImport
      parentRoute: typeof LayoutDashboardLayoutImport
    }
    '/_layout/_dashboardLayout/dashboard/': {
      id: '/_layout/_dashboardLayout/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof LayoutDashboardLayoutDashboardIndexImport
      parentRoute: typeof LayoutDashboardLayoutImport
    }
    '/_layout/_dashboardLayout/dashboard/profiles/$id': {
      id: '/_layout/_dashboardLayout/dashboard/profiles/$id'
      path: '/dashboard/profiles/$id'
      fullPath: '/dashboard/profiles/$id'
      preLoaderRoute: typeof LayoutDashboardLayoutDashboardProfilesIdImport
      parentRoute: typeof LayoutDashboardLayoutImport
    }
  }
}

// Create and export the route tree

interface LayoutDashboardLayoutRouteChildren {
  LayoutDashboardLayoutDashboardSettingsRoute: typeof LayoutDashboardLayoutDashboardSettingsRoute
  LayoutDashboardLayoutDashboardIndexRoute: typeof LayoutDashboardLayoutDashboardIndexRoute
  LayoutDashboardLayoutDashboardProfilesIdRoute: typeof LayoutDashboardLayoutDashboardProfilesIdRoute
}

const LayoutDashboardLayoutRouteChildren: LayoutDashboardLayoutRouteChildren = {
  LayoutDashboardLayoutDashboardSettingsRoute:
    LayoutDashboardLayoutDashboardSettingsRoute,
  LayoutDashboardLayoutDashboardIndexRoute:
    LayoutDashboardLayoutDashboardIndexRoute,
  LayoutDashboardLayoutDashboardProfilesIdRoute:
    LayoutDashboardLayoutDashboardProfilesIdRoute,
}

const LayoutDashboardLayoutRouteWithChildren =
  LayoutDashboardLayoutRoute._addFileChildren(
    LayoutDashboardLayoutRouteChildren,
  )

interface LayoutRouteChildren {
  LayoutDashboardLayoutRoute: typeof LayoutDashboardLayoutRouteWithChildren
  LayoutIndexRoute: typeof LayoutIndexRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutDashboardLayoutRoute: LayoutDashboardLayoutRouteWithChildren,
  LayoutIndexRoute: LayoutIndexRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LayoutDashboardLayoutRouteWithChildren
  '/': typeof LayoutIndexRoute
  '/dashboard/settings': typeof LayoutDashboardLayoutDashboardSettingsRoute
  '/dashboard': typeof LayoutDashboardLayoutDashboardIndexRoute
  '/dashboard/profiles/$id': typeof LayoutDashboardLayoutDashboardProfilesIdRoute
}

export interface FileRoutesByTo {
  '': typeof LayoutDashboardLayoutRouteWithChildren
  '/': typeof LayoutIndexRoute
  '/dashboard/settings': typeof LayoutDashboardLayoutDashboardSettingsRoute
  '/dashboard': typeof LayoutDashboardLayoutDashboardIndexRoute
  '/dashboard/profiles/$id': typeof LayoutDashboardLayoutDashboardProfilesIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/_dashboardLayout': typeof LayoutDashboardLayoutRouteWithChildren
  '/_layout/': typeof LayoutIndexRoute
  '/_layout/_dashboardLayout/dashboard/settings': typeof LayoutDashboardLayoutDashboardSettingsRoute
  '/_layout/_dashboardLayout/dashboard/': typeof LayoutDashboardLayoutDashboardIndexRoute
  '/_layout/_dashboardLayout/dashboard/profiles/$id': typeof LayoutDashboardLayoutDashboardProfilesIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/'
    | '/dashboard/settings'
    | '/dashboard'
    | '/dashboard/profiles/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/'
    | '/dashboard/settings'
    | '/dashboard'
    | '/dashboard/profiles/$id'
  id:
    | '__root__'
    | '/_layout'
    | '/_layout/_dashboardLayout'
    | '/_layout/'
    | '/_layout/_dashboardLayout/dashboard/settings'
    | '/_layout/_dashboardLayout/dashboard/'
    | '/_layout/_dashboardLayout/dashboard/profiles/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/_dashboardLayout",
        "/_layout/"
      ]
    },
    "/_layout/_dashboardLayout": {
      "filePath": "_layout/_dashboardLayout.tsx",
      "parent": "/_layout",
      "children": [
        "/_layout/_dashboardLayout/dashboard/settings",
        "/_layout/_dashboardLayout/dashboard/",
        "/_layout/_dashboardLayout/dashboard/profiles/$id"
      ]
    },
    "/_layout/": {
      "filePath": "_layout/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/_dashboardLayout/dashboard/settings": {
      "filePath": "_layout/_dashboardLayout/dashboard/settings.tsx",
      "parent": "/_layout/_dashboardLayout"
    },
    "/_layout/_dashboardLayout/dashboard/": {
      "filePath": "_layout/_dashboardLayout/dashboard/index.tsx",
      "parent": "/_layout/_dashboardLayout"
    },
    "/_layout/_dashboardLayout/dashboard/profiles/$id": {
      "filePath": "_layout/_dashboardLayout/dashboard/profiles/$id.tsx",
      "parent": "/_layout/_dashboardLayout"
    }
  }
}
ROUTE_MANIFEST_END */
